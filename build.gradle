plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "jp.classmethod.aws.cloudformation" version "0.41"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

//
//String dockerHubUsernameProperty = findProperty('dockerHubUsername') ?: 'tkgregory'
//String imageName = "${dockerHubUsernameProperty}/spring-boot-api-example:$version"
//
//docker {
//	name imageName
//	files "build/libs/${bootJar.archiveFileName.get()}"
//	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
//}
//
//dockerRun {
//	name project.name
//	image imageName
//	ports '8080:8080'
//	clean true
//}

import com.amazonaws.services.cloudformation.model.Capability

aws {
	region = findProperty('region') ?: 'us-east-1'
}

cloudFormation {
	stackName "niyo-stack"
	stackParams([
			SubnetID: findProperty('subnetId') ?: '',
			ServiceName: 'niyo',
			ServiceVersion: '4.0',
			DockerHubUsername: 'mniyonshuti'
	])
	templateFile project.file("ecs.yml")
}
